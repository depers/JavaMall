# multiline 插件可以用于其他类似的堆栈式信息，比如 linux 的内核日志
input {
    kafka {
        # app-log-服务名称
        topics_pattern => "app-log-.*"
        bootstrap_servers => "192.168.156.135:9092"
        codec => json
        consumer_threads => 1  # 配置consumer的并行消费线程数
        decorate_events => true
        # auto_offset_rest => "latest"
        group_id => "app-log-group"
    }

    kafka {
        # app-log-服务名称
        topics_pattern => "error-log-.*"
        bootstrap_servers => "192.168.156.135:9092"
        codec => json
        consumer_threads => 1
        decorate_events => true
        # auto_offset_rest => "latest"
        group_id => "error-log-group"
    }
}

filter {
    # 时区转换
    ruby {
        code => "event.set('index_time', event.timestamp.time.localtime.strftime('%Y.%m.%d'))"
    }

    if "app-log" in [fields][logtopic] {
        grok {
            # 表达式
            match => ["message", "\[%{NOTSPACE:currentDateTime}\] \[%{NOTSPACE:level}\] \[%{NOTSPACE:treadId}\] \[%{NOTSPACE:class}\] \[%{DATA:hostName}\] \[%{DATA:ip}\] \[%{DATA:applicationName}\] \[%{DATA:location}\] \[%{DATA:messageInfo}\] ## (\'\'|%{QUOTEDSTRING:throwable})"]
        }
    }

    if "error-log" in [fields][logtopic] {
        grok {
        # 表达式
            match => ["message", "\[%{NOTSPACE:currentDateTime}\] \[%{NOTSPACE:level}\] \[%{NOTSPACE:treadId}\] \[%{NOTSPACE:class}\] \[%{DATA:hostName}\] \[%{DATA:ip}\] \[%{DATA:applicationName}\] \[%{DATA:location}\] \[%{DATA:messageInfo}\] ## (\'\'|%{QUOTEDSTRING:throwable})"]
        }
    }
}

# 测试输出到控制台
output {
    stdout {
        codec => rubydebug
    }
}